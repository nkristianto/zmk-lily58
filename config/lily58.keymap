/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        TapAndHold: TapAndHold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPANDHOLD";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        HMShiftR: HMShiftR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMSHIFTR";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            hold-while-undecided;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 37 38 39 40 41 42 50 51 52 53 36 24 12>;
            hold-trigger-on-release;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        HMShiftL: HMShiftL {
            compatible = "zmk,behavior-hold-tap";
            label = "HMSHIFTL";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            hold-while-undecided;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 54 55 56 57 43>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };

        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 37 38 39 40 41 42 50 51 52 53 36 24 12>;
            hold-trigger-on-release;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 54 55 56 57 43>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        double_tap_shift_button {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <36 37>;
        };

        toggle_layer_3 {
            bindings = <&tog 3>;
            key-positions = <11 10>;
        };

        toggle_default_layer {
            bindings = <&tog 0>;
            key-positions = <49 48>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  ENTER |  | SPACE | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE  &kp N1        &kp N2           &kp N3               &kp N4                  &kp N5                          &kp N6  &kp N7                   &kp N8                &kp N9            &kp N0           &kp BSPC
&kp TAB    &kp Q         &kp W            &kp E                &kp R                   &kp T                           &kp Y   &kp U                    &kp I                 &kp O             &kp P            &kp ENTER
&kp ESC    &HML LCTRL A  &HML LEFT_ALT S  &HML LEFT_COMMAND D  &HMShiftL LEFT_SHIFT F  &kp G                           &kp H   &HMShiftR RIGHT_SHIFT J  &HMR RIGHT_COMMAND K  &HMR RIGHT_ALT L  &HMR RCTRL SEMI  &kp SQT
&kp LCTRL  &kp Z         &kp X            &kp C                &kp V                   &kp B   &kp LBKT     &kp RBKT   &kp N   &kp M                    &kp COMMA             &kp DOT           &kp FSLH         &kp RSHFT
                                          &kp LEFT_ALT         &kp LEFT_COMMAND        &mo 1   &kp SPACE    &kp SPACE  &mo 2   &kp RIGHT_COMMAND        &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                            &trans     &trans     &trans           &trans    &trans    &trans
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                                  &kp F7     &kp F8     &kp F9           &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PRCNT                               &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &trans        &trans        &trans        &trans        &trans        &studio_unlock    &trans  &trans     &kp MINUS  &kp EQUAL        &kp LBRC  &kp RBRC  &kp PIPE
                                        &trans        &trans        &trans        &trans            &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans        &trans         &none  &trans                    &trans                &trans                         &trans  &trans    &kp C_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
&none         &kp LG(LC(Q))  &none  &none                     &kp LG(LS(NUMBER_5))  &kp LA(F12)                    &none   &none     &kp UP_ARROW  &none              &none            &trans
&kp CAPSLOCK  &none          &none  &none                     &none                 &none                          &trans  &kp LEFT  &kp DOWN      &kp RIGHT          &trans           &trans
&none         &none          &none  &kp LC(LG(LS(NUMBER_4)))  &none                 &none        &trans    &trans  &trans  &trans    &trans        &kp LBKT           &kp RBKT         &kp BSLH
                                    &trans                    &trans                &trans       &trans    &trans  &trans  &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&none      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                                         &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none
&kp TAB    &kp Q         &kp W         &trans        &kp R         &trans                                               &trans        &trans        &trans        &kp O         &trans        &trans
&trans     &kp A         &kp S         &kp D         &trans        &kp G                                                &trans        &trans        &trans        &kp L         &trans        &trans
&kp LCTRL  &trans        &trans        &trans        &trans        &kp B         &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp N         &kp M         &kp COMMA     &kp PERIOD    &trans        &trans
                                       &kp LEFT_ALT  &trans        &trans        &trans              &trans             &none         &none         &trans
            >;
        };
    };
};
